// video.h - defines a basic kernel video driver
// Ben Staehle - 8/18/25
#pragma once

#include <stdint.h>

#include "video_defs.h"

extern uint32_t *framebuf;

// bitmap font
static const uint8_t FONT_BITMAP[][8] = {
    // 0: Fallback box â–¯
    {0xFF,0x81,0xBD,0xA5,0xA5,0xBD,0x81,0xFF},

    // 1..10: '0'..'9' (simple 5x7 designs in 8x8 cells)
    // '0'
    {0x3C,0x66,0x6E,0x7E,0x76,0x66,0x3C,0x00},
    // '1'
    {0x18,0x38,0x18,0x18,0x18,0x18,0x7E,0x00},
    // '2'
    {0x3C,0x66,0x06,0x1C,0x30,0x60,0x7E,0x00},
    // '3'
    {0x3C,0x66,0x06,0x1C,0x06,0x66,0x3C,0x00},
    // '4'
    {0x0C,0x1C,0x3C,0x6C,0x7E,0x0C,0x0C,0x00},
    // '5'
    {0x7E,0x60,0x7C,0x06,0x06,0x66,0x3C,0x00},
    // '6'
    {0x1C,0x30,0x60,0x7C,0x66,0x66,0x3C,0x00},
    // '7'
    {0x7E,0x06,0x0C,0x18,0x30,0x30,0x30,0x00},
    // '8'
    {0x3C,0x66,0x66,0x3C,0x66,0x66,0x3C,0x00},
    // '9'
    {0x3C,0x66,0x66,0x3E,0x06,0x0C,0x38,0x00},

    // 11..36: 'A'..'Z'
    // 'A'
    {0x18,0x3C,0x66,0x66,0x7E,0x66,0x66,0x00},
    // 'B'
    {0x7C,0x66,0x66,0x7C,0x66,0x66,0x7C,0x00},
    // 'C'
    {0x3C,0x66,0x60,0x60,0x60,0x66,0x3C,0x00},
    // 'D'
    {0x78,0x6C,0x66,0x66,0x66,0x6C,0x78,0x00},
    // 'E'
    {0x7E,0x60,0x60,0x7C,0x60,0x60,0x7E,0x00},
    // 'F'
    {0x7E,0x60,0x60,0x7C,0x60,0x60,0x60,0x00},
    // 'G'
    {0x3C,0x66,0x60,0x6E,0x66,0x66,0x3E,0x00},
    // 'H'
    {0x66,0x66,0x66,0x7E,0x66,0x66,0x66,0x00},
    // 'I'
    {0x7E,0x18,0x18,0x18,0x18,0x18,0x7E,0x00},
    // 'J'
    {0x0E,0x06,0x06,0x06,0x66,0x66,0x3C,0x00},
    // 'K'
    {0x66,0x6C,0x78,0x70,0x78,0x6C,0x66,0x00},
    // 'L'
    {0x60,0x60,0x60,0x60,0x60,0x60,0x7E,0x00},
    // 'M'
    {0x63,0x77,0x7F,0x6B,0x63,0x63,0x63,0x00},
    // 'N'
    {0x66,0x76,0x7E,0x6E,0x66,0x66,0x66,0x00},
    // 'O'
    {0x3C,0x66,0x66,0x66,0x66,0x66,0x3C,0x00},
    // 'P'
    {0x7C,0x66,0x66,0x7C,0x60,0x60,0x60,0x00},
    // 'Q'
    {0x3C,0x66,0x66,0x66,0x6A,0x6C,0x36,0x00},
    // 'R'
    {0x7C,0x66,0x66,0x7C,0x78,0x6C,0x66,0x00},
    // 'S'
    {0x3C,0x66,0x30,0x18,0x0C,0x66,0x3C,0x00},
    // 'T'
    {0x7E,0x5A,0x18,0x18,0x18,0x18,0x3C,0x00},
    // 'U'
    {0x66,0x66,0x66,0x66,0x66,0x66,0x3C,0x00},
    // 'V'
    {0x66,0x66,0x66,0x66,0x66,0x3C,0x18,0x00},
    // 'W'
    {0x63,0x63,0x63,0x6B,0x7F,0x77,0x63,0x00},
    // 'X'
    {0x66,0x66,0x3C,0x18,0x3C,0x66,0x66,0x00},
    // 'Y'
    {0x66,0x66,0x3C,0x18,0x18,0x18,0x3C,0x00},
    // 'Z'
    {0x7E,0x06,0x0C,0x18,0x30,0x60,0x7E,0x00},

    // 37: space
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    // 38: '.'
    {0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00},
    // 39: ','
    {0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x30},
    // 40: ':'
    {0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x00},
    // 41: ';'
    {0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x30},
    // 42: '!'
    {0x18,0x18,0x18,0x18,0x18,0x00,0x18,0x00},
    // 43: '?'
    {0x3C,0x66,0x06,0x0C,0x18,0x00,0x18,0x00},
    // 44: '-'
    {0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00},
    // 45: '+'
    {0x00,0x18,0x18,0x7E,0x18,0x18,0x00,0x00},
    // 46: '='
    {0x00,0x00,0x7E,0x00,0x7E,0x00,0x00,0x00},
    // 47: '/'
    {0x06,0x0C,0x18,0x30,0x60,0x40,0x00,0x00},
    // 48: '('
    {0x0C,0x18,0x30,0x30,0x30,0x18,0x0C,0x00},
    // 49: ')'
    {0x30,0x18,0x0C,0x0C,0x0C,0x18,0x30,0x00},
    // 50: '['
    {0x3C,0x30,0x30,0x30,0x30,0x30,0x3C,0x00},
    // 51: ']'
    {0x3C,0x0C,0x0C,0x0C,0x0C,0x0C,0x3C,0x00},
    // 52: '<'
    {0x0E,0x1C,0x38,0x70,0x38,0x1C,0x0E,0x00},
    // 53: '>'
    {0x70,0x38,0x1C,0x0E,0x1C,0x38,0x70,0x00},
    // 54: '%'
    {0xC1, 0xC3, 0x06, 0x0C, 0x18, 0x30, 0xC3, 0x83},
};

uint8_t font_bitmap_index(char c);
void    draw_glyph(int x, int y, uint32_t fg, uint32_t bg, const uint8_t glyph[8]);
void    draw_char(int x, int y, uint32_t fg, uint32_t bg, char c);
void    draw_str(int x, int y, uint32_t fg, uint32_t bg, const char* s);

void putpixel(uint32_t x, uint32_t y, uint32_t color);
void kvideo_init();
void clear_scr(uint32_t color);
